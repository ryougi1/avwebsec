from __future__ import print_function

class Luhn:
    cardNr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    def __init__(self, cardNr):
        self.cardNr = cardNr

    def calc_check_digit(self, cardNr):
        cardNr = cardNr
        #print(cardNr)
        sum = 0
        for i in range(0, 15):
            if i % 2 == 0:
                cardNr[i] = cardNr[i] * 2
                if cardNr[i] > 9:
                    cardNr[i] = cardNr[i] - 9
                sum += cardNr[i]
            else:
                sum += cardNr[i]
        #print("Sum =", sum)
        #print("10 - unit digit =", 10-(sum % 10), "= check digit")
        print(10-(sum%10), end="")
        #print(10 - (sum % 10))

    def calc_card_number(self, cardNr):
        cardNr = cardNr
        #print(cardNr)
        sum = 0
        checker = None
        checkDigit = cardNr[-1]

        for i in range(0, 15):
            if i % 2 == 0:
                if cardNr[i] == 'X':
                    #cardNr[i] = '2X'
                    checker = True
                else:
                    cardNr[i] = cardNr[i] * 2
                    if cardNr[i] > 9:
                        cardNr[i] = cardNr[i] - 9
                    sum += cardNr[i]
            else:
                if cardNr[i] != 'X':
                    sum += cardNr[i]

        #print("Sum =", sum, "+ X")
        unitDigit = (10 - checkDigit) % 10
        #print("Unit digit = 10 -", checkDigit, "=", unitDigit)
        for j in range(0, 10):
            secondSum = sum + j
            if secondSum % 10 == unitDigit:
                if checker:
                    if j % 2 == 0:
                        print(int(j / 2), end="")
                        #print(int(j / 2))
                    else:
                        print(int((j+9)/2), end ="")
                        #print(int((j + 9) / 2))
                else:
                    #print("X =", j, "gives sum =", sum + j, "mod10 = 1 = unit digit")
                    print(j, end="")
                    #print(j)


file = open('cardnr', 'r')
cardsCounted = 0
for line in file:
    cardsCounted += 1
    cardNrString = list(line)
    cardNr = []
    for k in range (0, 16):
        try:
            cardNr.insert(k, int(cardNrString[k]))
        except ValueError:
            cardNr.insert(k, cardNrString[k])

    Luhn1 = Luhn(cardNr)
    if cardNr[-1] == 'X':
        Luhn1.calc_check_digit(cardNr)
    else:
        Luhn1.calc_card_number(cardNr)
